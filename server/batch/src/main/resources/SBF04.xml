<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean id="cdicF04FileReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource">
            <bean class="org.springframework.core.io.FileSystemResource">
                <constructor-arg value="z:/process/CDICF04"></constructor-arg>
            </bean>
        </property>
        <property name="encoding" value="big5"></property>
        <property name="strict" value="false"></property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="targetType" value="tw.com.citi.cdic.batch.model.A23"></property>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean class="tw.com.citi.cdic.batch.item.Big5FixedLengthTokenizer">
                        <property name="columns" value="1,4,8,38,50,58,62,73,76,79,87,90,106,121,122,123"></property>
                        <property name="names" value="unit,branchNo,srNo,apNo,charCode,status,customerId,customerIdNo,customerType,openDate,currencyCode,accountBalance,stopPayAmount,jointCode,overdrawStatus,lastTxDate"></property>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="a23DbWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"></property>
        <property name="sql" value="INSERT INTO A23(CKUNIT, CKBRNO, CKSRNO, CKAPNO, CKCHARCODE, CKSTATUS, CKCUSTID, CKCUSTIDNO, CKCUSTTYPE, CKOPENDATE, CKCURCODE, CKACTBAL, CKSTOPPAYAMT, CKJOINTCODE, CKOVRSTATUS, CKLASTTXDATE) VALUES(:unit, :branchNo, :srNo, :apNo, :charCode, :status, :customerId, :customerIdNo, :customerType, :openDate, :currencyCode, :accountBalance, :stopPayAmount, :jointCode, :overdrawStatus, :lastTxDate)"></property>
        <property name="itemSqlParameterSourceProvider" ref="itemSqlParameterSourceProvider"></property>
    </bean>

    <bean id="f04B-a23Processor" class="tw.com.citi.cdic.batch.item.SBF04BProcessor">
        <property name="a23Dao" ref="a23Dao"></property>
    </bean>

    <bean id="f04B-a23DbWriter" parent="a23DbWriter">
        <property name="sql" value="UPDATE A23 SET CKJOINTCODE = :jointCode WHERE CKCUSTID = :customerId AND CKSRNO = :srNo"></property>
    </bean>

    <bean id="a23DbReader" class="org.springframework.batch.item.database.JdbcPagingItemReader">
        <property name="dataSource" ref="dataSource"></property>
        <property name="pageSize" value="500"></property>
        <property name="queryProvider">
            <bean class="org.springframework.batch.item.database.support.SqlServerPagingQueryProvider">
                <property name="selectClause" value="SELECT *"></property>
                <property name="fromClause" value="FROM A23"></property>
                <property name="sortKey" value="CKSRNO"></property>
            </bean>
        </property>
        <property name="rowMapper">
            <bean class="tw.com.citi.cdic.batch.A23Mapper"></bean>
        </property>
    </bean>

    <bean id="a23FileWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
        <property name="resource">
            <bean class="org.springframework.core.io.FileSystemResource">
                <constructor-arg value="z:/process/A23"></constructor-arg>
            </bean>
        </property>
        <property name="encoding" value="big5"></property>
        <property name="lineAggregator">
            <bean class="tw.com.citi.cdic.batch.item.Big5FormatterLineAggregator">
                <property name="format" value="%3s%4s%30s%12s%8s%4s%11s%3s%3s%8s%3s%16.2f%15.2f%1s%1s%8s"></property>
                <property name="fieldExtractor">
                    <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <property name="names" value="unit,branchNo,srNo,apNo,charCode,status,customerId,customerIdNo,customerType,openDate,currencyCode,accountBalance,stopPayAmount,jointCode,overdrawStatus,lastTxDate"></property>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

</beans>
